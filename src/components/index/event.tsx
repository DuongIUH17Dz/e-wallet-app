import React, { useState } from "react";
import { FC } from "react";
import { useNavigate } from "react-router-dom";



 export const events = [
  {
    logo: "/image/logo2.png",
    title: "Workshop Vidimi",
    time: "Saturday, April 12,\n8:30AM - 12:00PM",
    state: "Upcoming",
    location: "Location",
  },
  {
    logo: "/image/logo.png",
    title: "Workshop Vidimi",
    time: "Saturday, April 12,\n8:30AM - 12:00PM",
    state: "Upcoming",
    location: "Location",
  },
  {
    logo: "/image/logo2.png",
    title: "Workshop Vidimi",
    time: "Saturday, April 12,\n8:30AM - 12:00PM",
    state: "took place",
    location: "Location",
  },
  // ThÃªm sá»± kiá»‡n khÃ¡c náº¿u muá»‘n
];

const rewardSvg = (
  <svg width="80" height="80" viewBox="0 0 100 128" fill="none" xmlns="http://www.w3.org/2000/svg" style={{ position: "absolute", left: 2, top: -22 }}>
    <g filter="url(#filter0_d_601_10974)">
      <rect width="200" height="26" transform="translate(-46.5742 89.3208) rotate(-40)" fill="url(#paint0_linear_601_10974)" />
      <path d="M15.0648 58.0556L11.1861 53.4332L12.3548 52.4526L16.2334 57.075L15.0648 58.0556ZM11.8889 57.7778L10.9083 56.6091L15.5307 52.7305L16.5113 53.8991L11.8889 57.7778ZM17.4684 46.3817L23.0782 53.0671L21.6647 54.2532L17.1807 48.9094L17.1415 48.9422L16.4159 51.1866L15.364 49.9331L16.1398 47.4965L17.4684 46.3817ZM27.4117 49.6812C26.8484 50.1502 26.2493 50.4174 25.6144 50.4828C24.9817 50.5464 24.3384 50.4095 23.6843 50.072C23.0324 49.7326 22.4008 49.1964 21.7894 48.4634C21.1776 47.7343 20.764 47.0226 20.5485 46.3282C20.3352 45.632 20.3175 44.9812 20.4955 44.3757C20.6738 43.7662 21.0427 43.2267 21.602 42.7574C22.1613 42.2881 22.7554 42.0195 23.3845 41.9515C24.0157 41.8817 24.6556 42.0123 25.3042 42.3433C25.951 42.6721 26.5791 43.202 27.1887 43.9328C27.8041 44.6662 28.2212 45.3843 28.44 46.087C28.661 46.7879 28.6852 47.4444 28.5127 48.0565C28.3402 48.6685 27.9732 49.2101 27.4117 49.6812ZM26.4284 48.5093C26.8114 48.1879 26.9555 47.7387 26.8608 47.1618C26.7661 46.5849 26.3944 45.9121 25.7458 45.1435C25.3203 44.6365 24.9138 44.2581 24.5263 44.0084C24.141 43.7569 23.7825 43.6257 23.4507 43.6149C23.1211 43.6022 22.829 43.7026 22.5744 43.9163C22.1935 44.2359 22.0486 44.6819 22.1397 45.2545C22.2307 45.8271 22.5938 46.4941 23.229 47.2554C23.6599 47.769 24.0708 48.1548 24.4616 48.4129C24.8528 48.6669 25.2152 48.8004 25.5488 48.8135C25.8805 48.8243 26.1737 48.723 26.4284 48.5093ZM31.4842 44.4561L31.7496 44.8453C31.9623 45.1563 32.1481 45.4881 32.3068 45.8408C32.4695 46.1938 32.605 46.5233 32.7133 46.8292C32.8238 47.1332 32.9087 47.3736 32.9678 47.5501L32.0669 48.3062C31.9918 48.1504 31.8857 47.9334 31.7487 47.6552C31.6136 47.3792 31.4514 47.0777 31.2623 46.7506C31.0731 46.4235 30.8609 46.1065 30.6256 45.7996L30.3351 45.4203L31.4842 44.4561ZM35.9848 42.4875C35.4215 42.9565 34.8224 43.2237 34.1876 43.2891C33.5549 43.3527 32.9115 43.2158 32.2574 42.8783C31.6055 42.5389 30.9739 42.0027 30.3625 41.2697C29.7507 40.5406 29.3371 39.8289 29.1216 39.1345C28.9083 38.4383 28.8906 37.7875 29.0686 37.182C29.247 36.5725 29.6158 36.033 30.1751 35.5637C30.7344 35.0944 31.3286 34.8258 31.9576 34.7578C32.5888 34.688 33.2287 34.8186 33.8773 35.1496C34.5241 35.4784 35.1522 36.0083 35.7618 36.7391C36.3772 37.4725 36.7943 38.1906 37.0131 38.8933C37.2341 39.5942 37.2583 40.2507 37.0858 40.8628C36.9133 41.4748 36.5463 42.0164 35.9848 42.4875ZM35.0015 41.3156C35.3845 40.9942 35.5286 40.545 35.4339 39.9681C35.3392 39.3912 34.9676 38.7184 34.3189 37.9498C33.8935 37.4428 33.487 37.0644 33.0995 36.8147C32.7141 36.5632 32.3556 36.432 32.0238 36.4212C31.6942 36.4085 31.4021 36.5089 31.1475 36.7226C30.7666 37.0422 30.6217 37.4882 30.7128 38.0608C30.8039 38.6334 31.167 39.3004 31.8021 40.0617C32.2331 40.5753 32.6439 40.9611 33.0347 41.2192C33.4259 41.4732 33.7883 41.6067 34.1219 41.6198C34.4536 41.6306 34.7468 41.5293 35.0015 41.3156ZM42.3137 37.177C41.7504 37.6459 41.1513 37.9131 40.5164 37.9786C39.8837 38.0422 39.2403 37.9053 38.5863 37.5677C37.9344 37.2284 37.3027 36.6922 36.6913 35.9592C36.0796 35.2301 35.666 34.5184 35.4505 33.824C35.2371 33.1278 35.2195 32.4769 35.3975 31.8714C35.5758 31.2619 35.9446 30.7225 36.5039 30.2532C37.0632 29.7839 37.6574 29.5153 38.2864 29.4473C38.9177 29.3775 39.5576 29.5081 40.2062 29.8391C40.8529 30.1679 41.4811 30.6977 42.0906 31.4286C42.706 32.162 43.1231 32.8801 43.342 33.5828C43.5629 34.2837 43.5872 34.9402 43.4147 35.5522C43.2421 36.1643 42.8751 36.7059 42.3137 37.177ZM41.3303 36.0051C41.7133 35.6837 41.8575 35.2345 41.7628 34.6576C41.6681 34.0806 41.2964 33.4079 40.6478 32.6393C40.2223 32.1322 39.8158 31.7539 39.4283 31.5042C39.043 31.2527 38.6844 31.1215 38.3526 31.1106C38.0231 31.0979 37.7309 31.1984 37.4763 31.4121C37.0955 31.7316 36.9506 32.1777 37.0416 32.7503C37.1327 33.3229 37.4958 33.9898 38.1309 34.7512C38.5619 35.2648 38.9728 35.6506 39.3636 35.9086C39.7547 36.1626 40.1171 36.2962 40.4507 36.3092C40.7825 36.3201 41.0757 36.2187 41.3303 36.0051ZM48.6425 31.8665C48.0792 32.3354 47.4801 32.6026 46.8452 32.6681C46.2125 32.7317 45.5692 32.5947 44.9151 32.2572C44.2632 31.9179 43.6316 31.3817 43.0202 30.6486C42.4084 29.9196 41.9948 29.2079 41.7793 28.5135C41.566 27.8173 41.5483 27.1664 41.7263 26.5609C41.9046 25.9514 42.2735 25.412 42.8328 24.9427C43.3921 24.4734 43.9862 24.2047 44.6153 24.1368C45.2465 24.067 45.8864 24.1976 46.535 24.5285C47.1818 24.8574 47.8099 25.3872 48.4195 26.1181C49.0349 26.8515 49.452 27.5695 49.6708 28.2723C49.8918 28.9732 49.916 29.6297 49.7435 30.2417C49.571 30.8537 49.204 31.3953 48.6425 31.8665ZM47.6592 30.6945C48.0422 30.3731 48.1863 29.924 48.0916 29.347C47.9969 28.7701 47.6252 28.0973 46.9766 27.3288C46.5511 26.8217 46.1447 26.4433 45.7571 26.1937C45.3718 25.9422 45.0133 25.811 44.6815 25.8001C44.3519 25.7874 44.0598 25.8879 43.8052 26.1015C43.4243 26.4211 43.2794 26.8672 43.3705 27.4398C43.4615 28.0124 43.8246 28.6793 44.4598 29.4407C44.8907 29.9543 45.3016 30.3401 45.6924 30.5981C46.0836 30.8521 46.446 30.9856 46.7796 30.9987C47.1113 31.0096 47.4045 30.9082 47.6592 30.6945ZM57.1774 25.8786L50.1652 17.5217L50.7006 17.0725L57.7128 25.4293L57.1774 25.8786ZM54.0708 18.5168C53.7541 18.2188 53.3797 18.0953 52.9478 18.1463C52.5158 18.1972 52.0975 18.3925 51.6927 18.7322C51.3967 18.9805 51.1779 19.2457 51.0363 19.5277C50.8968 19.8079 50.8354 20.0838 50.8519 20.3555C50.8707 20.6253 50.9695 20.8669 51.1485 21.0801C51.2982 21.2586 51.4694 21.3764 51.662 21.4336C51.855 21.4868 52.0545 21.4992 52.2607 21.4709C52.465 21.4403 52.664 21.3902 52.8576 21.3204C53.0494 21.2485 53.221 21.1768 53.3725 21.1053L54.2049 20.7184C54.4173 20.618 54.664 20.5186 54.9448 20.4202C55.2278 20.3199 55.5257 20.2572 55.8384 20.2322C56.1515 20.2031 56.4626 20.2424 56.7718 20.3501C57.081 20.4578 57.3671 20.6684 57.63 20.9818C57.9332 21.343 58.1124 21.7489 58.1678 22.1994C58.2253 22.6481 58.1456 23.1099 57.9286 23.585C57.7138 24.0582 57.3496 24.5103 56.836 24.9413C56.3572 25.343 55.8778 25.6136 55.3978 25.7531C54.9199 25.8908 54.4649 25.9054 54.0328 25.797C53.6028 25.6868 53.2214 25.4599 52.8885 25.1162L53.7242 24.4149C53.9578 24.6491 54.2179 24.7868 54.5047 24.828C54.7918 24.8653 55.0834 24.8283 55.3795 24.717C55.6759 24.6018 55.9569 24.4328 56.2224 24.21C56.5314 23.9507 56.7669 23.6678 56.9288 23.3614C57.0889 23.0528 57.165 22.7479 57.1571 22.4467C57.1473 22.1434 57.0402 21.8698 56.8356 21.6261C56.6494 21.4041 56.4358 21.2755 56.1949 21.2403C55.9539 21.2052 55.6958 21.2289 55.4203 21.3117C55.1449 21.3945 54.8623 21.5019 54.5724 21.6338L53.5526 22.089C52.9043 22.3771 52.3109 22.5097 51.7725 22.4868C51.2341 22.4639 50.7759 22.2272 50.3979 21.7767C50.0838 21.4024 49.9111 20.991 49.8797 20.5427C49.8487 20.0903 49.9403 19.6426 50.1545 19.1995C50.3691 18.7525 50.6896 18.35 51.1162 17.9921C51.5471 17.6305 51.9949 17.3864 52.4597 17.2597C52.9227 17.1308 53.3635 17.1169 53.7821 17.2181C54.203 17.3174 54.5603 17.5312 54.8543 17.8594L54.0708 18.5168ZM55.1485 14.7643L61.8555 18.7267L61.9339 18.661L59.1963 11.3678L60.0451 10.6556L63.2 19.4009L62.3644 20.1021L54.2998 15.4765L55.1485 14.7643ZM61.896 9.10248L67.5058 15.788L66.6962 16.4673L61.0864 9.78179L61.896 9.10248Z" fill="white" />
    </g>
    <defs>
      <filter id="filter0_d_601_10974" x="-62.5742" y="-51.2368" width="201.922" height="180.475" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
        <feFlood floodOpacity="0" result="BackgroundImageFix" />
        <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
        <feOffset dy="4" />
        <feGaussianBlur stdDeviation="8" />
        <feComposite in2="hardAlpha" operator="out" />
        <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.16 0" />
        <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_601_10974" />
        <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_601_10974" result="shape" />
      </filter>
      <linearGradient id="paint0_linear_601_10974" x1="0" y1="13" x2="200" y2="13" gradientUnits="userSpaceOnUse">
        <stop stopColor="#1AAFFF" />
        <stop offset="1" stopColor="#8CD7FF" />
      </linearGradient>
    </defs>
  </svg>
);

export const Event: FC = () => {
  const [current, setCurrent] = useState(0);
  const navigate = useNavigate();

  return (
    <div style={{ padding: "16px 0 0 0" }}>
      {/* Header */}
      <div style={{ display: "flex", alignItems: "center", marginBottom: 12, marginLeft: 12 }}>
        <span style={{ fontWeight: 700, fontSize: 20, color: "#232B3A", display: "flex", alignItems: "center" }}>
          <span style={{ marginRight: 6 }}>ðŸ“£</span>
          Sá»± kiá»‡n sáº¯p diá»…n ra
        </span>
        <span style={{ marginLeft: "auto", marginRight: 8 }}
        onClick={() => navigate("/eventpage")}>
          <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
            <rect width="28" height="28" rx="14" fill="#F2C2F7" />
            <path d="M8.16602 13.9998H19.8327M19.8327 13.9998L13.9993 8.1665M19.8327 13.9998L13.9993 19.8332" stroke="#3D0043" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
          </svg>
        </span>
      </div>
      {/* Event Card */}
      <div style={{ display: "flex", justifyContent: "center", alignItems: "center" }}>
        <div style={{
          background: "#fff",
          borderRadius: 24,
          boxShadow: "0 2px 8px #0001",
          display: "flex",
          alignItems: "center",
          minWidth: 320,
          maxWidth: 340,
          padding: "16px 18px",
          position: "relative",
        }}>
          {/* Logo + Reward */}
          <div style={{ position: "relative", marginRight: 16 }}>
            <img
              src={events[current].logo}
              alt="logo"
              style={{
                width: 64,
                height: 64,
                borderRadius: 16,
                objectFit: "cover",
                background: "linear-gradient(90deg,#d946ef,#6366f1)",
              }}
            />
            <div style={{
              position: "absolute",
              left: -16,
              top: 12,
              zIndex: 2,
              display: "flex",
              alignItems: "center",
            }}>
              {rewardSvg}
              <span style={{
                position: "absolute",
                left: 16,
                top: 2,
                color: "#fff",
                fontWeight: 700,
                fontSize: 13,
                letterSpacing: 0.5,
              }}>
              </span>
            </div>
          </div>
          {/* Info */}
          <div>
            <div style={{ fontWeight: 700, fontSize: 18, color: "#232B3A", marginBottom: 4 }}>
              {events[current].title}
            </div>
            <div style={{ fontSize: 14, color: "#7A89A8", whiteSpace: "pre-line" }}>
              {events[current].time}
            </div>
            <div style={{ fontSize: 14, color: "#7A89A8" }}>
              {events[current].location}
            </div>
          </div>
        </div>
      </div>
      {/* Dots */}
      {/* Dots */}
      <div style={{ display: "flex", justifyContent: "center", alignItems: "center", marginTop: 12, gap: 8 }}>
        {events.map((_, idx) => (
          <span
            key={idx}
            style={{
              width: 12,
              height: 12,
              borderRadius: "50%",
              background: idx === current ? "#B600C4" : "#b8b7b7ff",
              display: "inline-block",
              cursor: "pointer",
              transition: "background 0.2s",
            }}
            onClick={() => setCurrent(idx)}
          />
        ))}
      </div>
    </div>
  );
};

export default Event;